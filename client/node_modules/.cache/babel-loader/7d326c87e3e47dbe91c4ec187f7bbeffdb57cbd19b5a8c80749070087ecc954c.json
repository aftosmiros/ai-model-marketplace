{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Miras\\\\Documents\\\\2 course\\\\trimester 2\\\\Blockchain Technologies 1\\\\assignment 2\\\\ai-model-marketplace\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport \"./App.css\";\nimport contractABI from \"./abi.json\"; // Скопируйте ABI сюда\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = \"0xa106F7546D53D35766585a9acFfD7f001FCBBc74\"; // Адрес вашего контракта\n\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(\"\");\n  const [contract, setContract] = useState(null);\n  const [models, setModels] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  useEffect(() => {\n    const init = async () => {\n      if (window.ethereum) {\n        try {\n          // Подключаем Web3\n          const web3 = new Web3(window.ethereum);\n          await window.ethereum.request({\n            method: 'eth_requestAccounts'\n          });\n\n          // Получаем список аккаунтов\n          const accounts = await web3.eth.getAccounts();\n\n          // Инициализируем контракт\n          const deployedContract = new web3.eth.Contract(contractABI, contractAddress);\n          setAccount(accounts[0]);\n          setContract(deployedContract);\n          console.log(\"Connected to MetaMask:\", accounts[0]);\n        } catch (error) {\n          console.error(\"Error connecting to MetaMask:\", error);\n        }\n      } else {\n        alert(\"MetaMask is not installed! Please install it to use this app.\");\n      }\n    };\n    init();\n  }, []);\n  const listModel = async () => {\n    await contract.methods.listModel(name, description, price).send({\n      from: account\n    });\n    alert(\"Model listed!\");\n  };\n  const fetchModels = async () => {\n    if (!contract) {\n      alert(\"Contract not initialized.\");\n      return;\n    }\n    try {\n      // Fetch the length of the models array\n      const modelCount = await contract.methods.getModelsLength().call();\n      const tempModels = [];\n      for (let i = 0; i < modelCount; i++) {\n        const model = await contract.methods.models(i).call();\n        tempModels.push({\n          ...model,\n          id: i\n        });\n      }\n      setModels(tempModels);\n    } catch (error) {\n      console.error(\"Error fetching models:\", error);\n      alert(\"Failed to fetch models. See console for details.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"AI Model Marketplace\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Connected account: \", account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"List AI Model\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Model Name\",\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Description\",\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Price (Wei)\",\n          onChange: e => setPrice(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: listModel,\n          children: \"List Model\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Available Models\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchModels,\n          children: \"Fetch Models\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: models.map((model, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: model.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this), \" - \", model.price, \" Wei\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"bieKjM2tBK8SafOPqpslE475iYE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Web3","contractABI","jsxDEV","_jsxDEV","contractAddress","App","_s","account","setAccount","contract","setContract","models","setModels","name","setName","description","setDescription","price","setPrice","init","window","ethereum","web3","request","method","accounts","eth","getAccounts","deployedContract","Contract","console","log","error","alert","listModel","methods","send","from","fetchModels","modelCount","getModelsLength","call","tempModels","i","model","push","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","onClick","map","index","_c","$RefreshReg$"],"sources":["C:/Users/Miras/Documents/2 course/trimester 2/Blockchain Technologies 1/assignment 2/ai-model-marketplace/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport \"./App.css\";\r\nimport contractABI from \"./abi.json\"; // Скопируйте ABI сюда\r\n\r\nconst contractAddress = \"0xa106F7546D53D35766585a9acFfD7f001FCBBc74\"; // Адрес вашего контракта\r\n\r\nfunction App() {\r\n    const [account, setAccount] = useState(\"\");\r\n    const [contract, setContract] = useState(null);\r\n    const [models, setModels] = useState([]);\r\n    const [name, setName] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [price, setPrice] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const init = async () => {\r\n            if (window.ethereum) {\r\n                try {\r\n                    // Подключаем Web3\r\n                    const web3 = new Web3(window.ethereum);\r\n                    await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n\r\n                    // Получаем список аккаунтов\r\n                    const accounts = await web3.eth.getAccounts();\r\n\r\n                    // Инициализируем контракт\r\n                    const deployedContract = new web3.eth.Contract(contractABI, contractAddress);\r\n\r\n                    setAccount(accounts[0]);\r\n                    setContract(deployedContract);\r\n\r\n                    console.log(\"Connected to MetaMask:\", accounts[0]);\r\n                } catch (error) {\r\n                    console.error(\"Error connecting to MetaMask:\", error);\r\n                }\r\n            } else {\r\n                alert(\"MetaMask is not installed! Please install it to use this app.\");\r\n            }\r\n        };\r\n        init();\r\n    }, []);\r\n\r\n    const listModel = async () => {\r\n        await contract.methods.listModel(name, description, price).send({ from: account });\r\n        alert(\"Model listed!\");\r\n    };\r\n\r\n    const fetchModels = async () => {\r\n        if (!contract) {\r\n            alert(\"Contract not initialized.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Fetch the length of the models array\r\n            const modelCount = await contract.methods.getModelsLength().call();\r\n\r\n            const tempModels = [];\r\n            for (let i = 0; i < modelCount; i++) {\r\n                const model = await contract.methods.models(i).call();\r\n                tempModels.push({ ...model, id: i });\r\n            }\r\n\r\n            setModels(tempModels);\r\n        } catch (error) {\r\n            console.error(\"Error fetching models:\", error);\r\n            alert(\"Failed to fetch models. See console for details.\");\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"container\">\r\n                <h1>AI Model Marketplace</h1>\r\n                <p>Connected account: {account}</p>\r\n\r\n                <div className=\"form\">\r\n                    <h2>List AI Model</h2>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Model Name\"\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Description\"\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                    />\r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Price (Wei)\"\r\n                        onChange={(e) => setPrice(e.target.value)}\r\n                    />\r\n                    <button onClick={listModel}>List Model</button>\r\n                </div>\r\n\r\n                <div>\r\n                    <h2>Available Models</h2>\r\n                    <button onClick={fetchModels}>Fetch Models</button>\r\n                    <ul>\r\n                        {models.map((model, index) => (\r\n                            <li key={index}>\r\n                                <strong>{model.name}</strong> - {model.price} Wei\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}